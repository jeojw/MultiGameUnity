plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.1'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'com.google.protobuf' version '0.9.4'
}

group = 'com.multigame'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven {
		url = uri('https://repo.spring.io/snapshot')
	}
}

ext {
	springGrpcVersion = '0.4.0-SNAPSHOT'
	protobufVersion = '4.28.2'
	protobufPluginVersion = '0.9.4'
	grpcVersion = '1.69.0'
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-logging'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-tomcat'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	implementation 'mysql:mysql-connector-java:8.0.33'
	runtimeOnly 'com.mysql:mysql-connector-j'
	implementation 'com.zaxxer:HikariCP:3.4.5'

	implementation 'org.mapstruct:mapstruct:1.5.5.Final'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'

	implementation "com.google.protobuf:protobuf-java-util:${protobufVersion}"
	implementation "com.google.protobuf:protobuf-java:${protobufVersion}"
	implementation "com.google.protobuf:protoc:${protobufVersion}"

	implementation 'net.devh:grpc-server-spring-boot-starter:3.1.0.RELEASE'

	compileOnly 'org.apache.tomcat:annotations-api:6.0.53'

	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.grpc:spring-grpc-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.grpc:spring-grpc-dependencies:${springGrpcVersion}"
	}
}

protobuf {
	protoc {
		artifact = "com.google.protobuf:protoc:${protobufVersion}" // protoc 버전 설정
	}
	plugins {
		grpc {
			artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}"
		}
	}
	generateProtoTasks {
		all()*.plugins {
			grpc {
				option '@generated=omit'
			}
		}
	}
}

sourceSets {
	main {
		java {
			srcDirs 'build/generated/source/proto/main/java'
		}
	}
}

tasks.named('test') {
	useJUnitPlatform()
}

tasks.withType(JavaCompile).configureEach {
	options.compilerArgs << "-parameters"
}
